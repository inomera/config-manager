plugins {
    id 'java-library'
}

apply from: "${rootProject.rootDir}/gradle/tests.gradle"
apply from: "${rootProject.rootDir}/gradle/publishing.gradle"

group = 'com.inomera.telco.commons'
version = rootProject.file('VERSION').text.trim()
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    testImplementation {
        extendsFrom compileOnly
    }
}

task copyConfigurationMetadata(type: Copy) {
    from(compileJava) {
        include 'META-INF/spring-configuration-metadata.json'
    }
    into "out/production/classes"
}

compileJava {
    dependsOn processResources
    finalizedBy copyConfigurationMetadata
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter:3.1.1'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:3.1.1'
    implementation 'org.springframework.boot:spring-boot:3.1.1'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:3.1.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    api 'com.inomera.telco.commons:lock-provider:1.2.0'
    api project(':config-manager-core')

    // Cassandra
    compileOnly "com.datastax.cassandra:cassandra-driver-core:${versions.cassandra}"
    compileOnly "com.datastax.cassandra:cassandra-driver-mapping:${versions.cassandra}"
    compileOnly "com.datastax.cassandra:cassandra-driver-extras:${versions.cassandra}"

    // Mongo
    compileOnly "org.mongodb:mongodb-driver-sync:${versions.mongodb}"
    compileOnly "org.mongodb:mongodb-driver-core:${versions.mongodb}"

    // Redis
    compileOnly "org.redisson:redisson:${versions.redisson}"

    // Jasypt Decryption
    compileOnly 'org.jasypt:jasypt:1.9.3'

    testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.2.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testImplementation "org.mockito:mockito-core:2.23.4"
    testImplementation('org.mockito:mockito-junit-jupiter:2.18.3')
    testImplementation('org.hamcrest:hamcrest-all:1.3')
    testImplementation("com.h2database:h2:${versions.h2}")

}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${project.group}"
            artifactId = "${project.name}"
            version = "${project.version}"

            from components.java
            artifact tasks.sourceJar
        }
    }
}
